# ==================== PERSONAL PROJECTS =====================

alias 1p-personal='op signin --account my.1password.com'

alias daily-backup="(ge-backup)"

alias gg-aws='clone-and-cd georgegillams aws'

alias on-this-day='open "https://www.timeanddate.com/on-this-day/$(date +%B| tr "[:upper:]" "[:lower:]")/$(date +%e | xargs)"'

alias sort-phone-photos='cd ~/Documents/georgegillams/image-meta-fixer && yarn action /Users/george.gillams/Dropbox/Camera\ Uploads/ ~/Dropbox/iPhone\ photos'

alias dotfiles='clone-and-cd georgegillams dotfiles'
alias dotfiles-nuke='cd ~/Documents/georgegillams/ && sudo rm -rf dotfiles && git clone git@github.com:georgegillams/dotfiles.git'
alias dotfiles-save-tmux-conf='dotfiles && cp ~/.tmux.conf ./ && gaa && gcmpchore "Update TMUX conf"'
alias dotfiles-save-zshrc='dotfiles && cp ~/.zshrc ./ && cp ~/.zsh/gh_* ./.zsh/ && cp ~/.zsh/typeform ~/Google\ Drive/My\ Drive/.zsh/ && gaa && gcmpchore "Update ZSHRC"'
alias dotfiles-save-vimrc='dotfiles && cp ~/.vimrc ./ && gaa && gcmpchore "Update VIMRC"'
alias dotfiles-edit-install-script='(dotfiles && cd system-install && c)'
alias brew-edit-install-script='dotfiles-edit-install-script'
alias dotfiles-commit-brew-script='dotfiles && gaa && gcmpchore "Update brew install script"'
alias dotfiles-save-vscode-settings='dotfiles && cp ~/Library/Application\ Support/Code/User/*.json ./vscode/ && gaa && gcmpchore "Update vscode settings"'

alias browser-scripts='clone-and-cd georgegillams browser-scripts'
alias browser-scriptss='browser-scripts && yarn setup'
alias browser-scripts-commit='browser-scripts && browser-scripts-build-readme && gaa && gcmpfeat "Update scripts"'
alias browser-scripts-nuke='cd ~/Documents/georgegillams/ && sudo rm -rf browser-scripts && git clone git@github.com:georgegillams/browser-scripts.git'
alias browser-scripts-build-readme='browser-scripts && yarn build:readme'
alias browser-scripts-extension='browser-scripts && cd src/Notion\ Sidebar\ Expander/'
alias browser-scripts-extensiono='browser-scripts-extension && npx web-ext run --firefox=/Applications/Firefox\ Developer\ Edition.app/Contents/MacOS/firefox-bin'

alias bt='clone-and-cd georgegillams backpack-transpiled'
alias bt-nuke='cd ~/Documents/georgegillams/ && sudo rm -rf backpack-transpiled && git clone git@github.com:georgegillams/backpack-transpiled.git'
alias bts='bt && yarn install'
alias bt-fix-permissions='sudo chown -R $(whoami) ./'
alias bt-pull-backpack='yarn pull-backpack:clean && git clone https://github.com/Skyscanner/backpack.git && yarn pull-backpack:changelog && (cd backpack && yarn install && yarn build && (find packages -name "node_modules" -exec rm -rf {} \; || true))'
alias bt-ship='bts && bt-fix-permissions && bt-pull-backpack && yellow "Ready to release, Please run $(blue "yarn release:TYPE")"'

alias r2d2-ssh-ec2='ssh ubuntu@ec2-35-178-235-11.eu-west-2.compute.amazonaws.com'
alias zendog-ssh-ec2='ssh ubuntu@ec2-13-40-134-151.eu-west-2.compute.amazonaws.com'

alias tgi='clone-and-cd georgegillams tg-intervals'
alias tgis='tgi'
alias tgio='tgi && make dev'

alias gwa='clone-and-cd georgegillams webapp-boilerplate'
alias gwa-nuke='cd ~/Documents/georgegillams/ && sudo rm -rf webapp-boilerplate && git clone git@github.com:georgegillams/webapp-boilerplate.git'
alias gwa-start-transpile-watch-in-new-tab="osascript -e 'tell application \"iTerm\" to activate' -e 'tell application \"System Events\" to tell process \"iTerm\" to keystroke \"t\" using command down' -e 'tell application \"System Events\" to tell process \"iTerm\" to keystroke \"gwa && yarn gg-webapp-transpile:watch\"' -e 'tell application \"System Events\" to tell process \"iTerm\" to key code 52'"
alias gwa-start='gwa && gwa-start-transpile-watch-in-new-tab && yarn dev'
alias gwas='gwa && PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true yarn gg-webapp-install && PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true yarn install && yarn prebuild'
alias gwa-live-build='gwa && yarn gg-webapp-transpile && yarn gg-webapp-transpile:live'
alias gwao='gwa && yarn dev'
alias gwa-deploy='gwa && yarn build && zip -r build build && scp -o "StrictHostKeyChecking=no" -r ./build.zip ubuntu@www.georgegillams.co.uk:/home/ubuntu/webapp-boilerplate/'
alias gwa-docker-build-image='gwa && docker build -t webapp-boilerplate-test -f Dockerfile.backstopjstest .'
alias gwa-update-snapshots='gwa && ./scripts/docker/prepare.sh && ./scripts/docker/run-tests.sh --update --tty && ./scripts/docker/clean-up.sh'
alias gwa-update-snapshots-skip-npm='gwa && ./scripts/docker/prepare.sh && ./scripts/docker/run-tests.sh --update --tty --skip-npm && ./scripts/docker/clean-up.sh'
alias gwa-link-live-to-this-project='yellow "Ensure you are already running gwa-live-build alongside this app" && (gwa && cd gg-webapp/dist && yarn link) && yarn link @george-gillams/webapp'

alias cl='clone-and-cd georgegillams contentful-links'
alias cls='cl && echo "No setup required"'
alias clo='cl && yarn dev'
alias clbuild='cl && yarn build'

alias cardc='clone-and-cd georgegillams card-challenge'
alias cardc-nuke='cd ~/Documents/georgegillams/ && sudo rm -rf card-challenge && git clone git@github.com:georgegillams/card-challenge.git'
alias cardcs='cardc && PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true yarn install && yarn prebuild'
alias cardc-deploy='cardc && yarn build && zip -r build build && scp -o "StrictHostKeyChecking=no" -r ./build.zip ubuntu@www.georgegillams.co.uk:/home/ubuntu/card-challenge/'

alias ge='clone-and-cd georgegillams georgegillams.co.uk'
alias ge-nuke='cd ~/Documents/georgegillams/ && sudo rm -rf georgegillams.co.uk && git clone git@github.com:georgegillams/georgegillams.co.uk.git'
alias ges='ge && PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true yarn install && yarn prebuild'
alias geo='ge && yarn dev'
alias ge-backup='ge && 1p-personal && node scripts/backup-production-data.js --apiKey $(op item get "AWS Private REST API Key" --vault Personal --field password --cache)'
alias ge-deploy='ge && yarn build && zip -r build build && scp -o "StrictHostKeyChecking=no" -r ./build.zip ubuntu@www.georgegillams.co.uk:/home/ubuntu/georgegillams.co.uk/'
alias ge-update-snapshots='ge && ./scripts/docker/prepare.sh && ./scripts/docker/run-tests.sh --update --tty && ./scripts/docker/clean-up.sh'
alias ge-update-snapshots-skip-npm='ge && ./scripts/docker/prepare.sh && ./scripts/docker/run-tests.sh --update --tty --skip-npm && ./scripts/docker/clean-up.sh'

alias ihh='clone-and-cd georgegillams isithappyhour.net'
alias ihhs='ihh && PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true yarn install && yarn prebuild'
alias ihho='ihh && yarn dev'

alias cgb='clone-and-cd georgegillams beta.cgwedding/'
alias cgb-nuke='cd ~/Documents/georgegillams/ && sudo rm -rf beta.cgwedding && git clone git@github.com:georgegillams/beta.cgwedding.git'
alias cgbs='cgb && PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true yarn install && yarn prebuild'
alias cgb-backup='cgb && node scripts/backup-production-data.js'
alias cgb-deploy='cgb && yarn build && zip -r build build && scp -o "StrictHostKeyChecking=no" -r ./build.zip ubuntu@www.georgegillams.co.uk:/home/ubuntu/beta.cgwedding/'
alias cgb-update-snapshots='cgb && ./scripts/docker/prepare.sh && ./scripts/docker/run-tests.sh --update --tty && ./scripts/docker/clean-up.sh'
alias cgb-update-snapshots-skip-npm='cgb && ./scripts/docker/prepare.sh && ./scripts/docker/run-tests.sh --update --tty --skip-npm && ./scripts/docker/clean-up.sh'

alias ggc='clone-and-cd georgegillams gg-components'
alias ggc-nuke='cd ~/Documents/georgegillams/ && sudo rm -rf gg-components && git clone git@github.com:georgegillams/gg-components.git'
alias ggcs='ggc && PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true yarn'
alias ggco='ggc && yarn dev'
alias ggc-update-snapshots='ggc && ./scripts/docker/snapshot-test/prepare.sh && ./scripts/docker/snapshot-test/run-tests.sh --update --tty && ./scripts/docker/snapshot-test/clean-up.sh'
alias ggc-live-build='ggc && yarn transpile && yarn transpile:js:live'
alias ggc-link-live-to-this-project='yellow "Ensure you are already running ggc-live-build alongside this app" && (cd node_modules/react && yarn link) && (cd node_modules/react-dom && yarn link) && (ggc && yarn link react && yarn link react-dom && cd dist && yarn link) && yarn link @george-gillams/components'

alias sra='clone-and-cd georgegillams screen-reader-adventures'
alias sra-nuke='cd ~/Documents/georgegillams/ && sudo rm -rf screen-reader-adventures && git clone git@github.com:georgegillams/screen-reader-adventures.git'
alias sras='sra && PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true yarn install'
alias sra-update-snapshots='sra && ./scripts/docker/prepare.sh && ./scripts/docker/run-tests.sh --update --tty && ./scripts/docker/clean-up.sh'
alias sra-update-snapshots-skip-npm='sra && ./scripts/docker/prepare.sh && ./scripts/docker/run-tests.sh --update --tty --skip-npm && ./scripts/docker/clean-up.sh'

alias contrastchecker='clone-and-cd georgegillams speedy-colour-contrast-checker'
alias contrastcheckers='contrastchecker && echo "No setup required"'
alias contrastcheckero='contrastchecker && open SpeedyColourContrastChecker.xcodeproj'

alias meg='clone-and-cd georgegillams my-event-guide'
alias megs='meg && echo "No setup required"'
alias mego='meg && open MyEventGuide.xcodeproj'

alias boiler-server='clone-and-cd georgegillams boiler-server'
alias boiler-server-s='boiler-server && yarn'
alias boiler-server-deploy='boiler-server && scp -o "StrictHostKeyChecking=no" -r ./ pi@192.168.0.95:/home/pi/Documents/georgegillams/boiler-server'